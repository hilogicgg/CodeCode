1. Curator操作:
    1.1 创建客户端
        CuratorFrameworkFactory 类: 构造者模式的创建客户端的工具类.
            cClient = CuratorFrameworkFactory.build.build();
    1.2 开始监听 + 添加监听器
        开始监听
        NodeCache nodeCache = new NodeCache(cClient, path);
        nodeCache.start(true);
        如: 子节点监听器
        PathChildrenCache 类: 该类负责子节点监听操作.
            Listenable<PathChildrenCacheListener> listenable = PathChildrenCache.addListenable(); 获取到了子节点监听类型的 监听管理器接口
            PathChildenCacheListener cacheListener = new PathChildenCacheListener(){
                void childEvent(client,event){
                    sout("event是监听到的事件, 它有Data、InitialData、Type 三个属性");
                }
            }; 匿名监听器接口对象 实现监听到数据变化后的处理方法.
            listenable.addListener( cacheListener ); 添加监听器

    1.3 关闭资源
        pathChildenCache 缓存关闭
        cClient 客户端关闭